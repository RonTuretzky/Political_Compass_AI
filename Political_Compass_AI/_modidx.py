# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/Political_Compass_AI',
                'doc_host': 'https://RonTuretzky.github.io',
                'git_url': 'https://github.com/RonTuretzky/Political_Compass_AI',
                'lib_path': 'Political_Compass_AI'},
  'syms': { 'Political_Compass_AI.csv_convert': { 'Political_Compass_AI.csv_convert.make_csv': ( 'Database '
                                                                                                 'Utilities/csv_convert.html#make_csv',
                                                                                                 'Political_Compass_AI/csv_convert.py'),
                                                  'Political_Compass_AI.csv_convert.split_string': ( 'Database '
                                                                                                     'Utilities/csv_convert.html#split_string',
                                                                                                     'Political_Compass_AI/csv_convert.py')},
            'Political_Compass_AI.data_processing': { 'Political_Compass_AI.data_processing.collate_batch': ( 'Model_Utils/data_processing.html#collate_batch',
                                                                                                              'Political_Compass_AI/data_processing.py'),
                                                      'Political_Compass_AI.data_processing.return_iters': ( 'Model_Utils/data_processing.html#return_iters',
                                                                                                             'Political_Compass_AI/data_processing.py'),
                                                      'Political_Compass_AI.data_processing.split_string': ( 'Model_Utils/data_processing.html#split_string',
                                                                                                             'Political_Compass_AI/data_processing.py'),
                                                      'Political_Compass_AI.data_processing.yield_tokens': ( 'Model_Utils/data_processing.html#yield_tokens',
                                                                                                             'Political_Compass_AI/data_processing.py')},
            'Political_Compass_AI.evalute_hf_model': { 'Political_Compass_AI.evalute_hf_model.evalute': ( 'Huggingface Model '
                                                                                                          'ðŸ¤—/evaluate_hf_model.html#evalute',
                                                                                                          'Political_Compass_AI/evalute_hf_model.py')},
            'Political_Compass_AI.hf_model': { 'Political_Compass_AI.hf_model.compute_metrics': ( 'Huggingface Model '
                                                                                                  'ðŸ¤—/hf.html#compute_metrics',
                                                                                                  'Political_Compass_AI/hf_model.py'),
                                               'Political_Compass_AI.hf_model.preprocess_function': ( 'Huggingface Model '
                                                                                                      'ðŸ¤—/hf.html#preprocess_function',
                                                                                                      'Political_Compass_AI/hf_model.py')},
            'Political_Compass_AI.model': { 'Political_Compass_AI.model.TextClassificationModel': ( 'Linear '
                                                                                                    'Model/Model_Utils/model.html#textclassificationmodel',
                                                                                                    'Political_Compass_AI/model.py'),
                                            'Political_Compass_AI.model.TextClassificationModel.__init__': ( 'Linear '
                                                                                                             'Model/Model_Utils/model.html#textclassificationmodel.__init__',
                                                                                                             'Political_Compass_AI/model.py'),
                                            'Political_Compass_AI.model.TextClassificationModel.forward': ( 'Linear '
                                                                                                            'Model/Model_Utils/model.html#textclassificationmodel.forward',
                                                                                                            'Political_Compass_AI/model.py'),
                                            'Political_Compass_AI.model.TextClassificationModel.init_weights': ( 'Linear '
                                                                                                                 'Model/Model_Utils/model.html#textclassificationmodel.init_weights',
                                                                                                                 'Political_Compass_AI/model.py'),
                                            'Political_Compass_AI.model.define_model': ( 'Linear Model/Model_Utils/model.html#define_model',
                                                                                         'Political_Compass_AI/model.py')},
            'Political_Compass_AI.run': { 'Political_Compass_AI.run.collate_batch': ( 'Linear Model/run.html#collate_batch',
                                                                                      'Political_Compass_AI/run.py'),
                                          'Political_Compass_AI.run.define_model': ( 'Linear Model/run.html#define_model',
                                                                                     'Political_Compass_AI/run.py'),
                                          'Political_Compass_AI.run.objective': ( 'Linear Model/run.html#objective',
                                                                                  'Political_Compass_AI/run.py'),
                                          'Political_Compass_AI.run.return_iters': ( 'Linear Model/run.html#return_iters',
                                                                                     'Political_Compass_AI/run.py'),
                                          'Political_Compass_AI.run.split_string': ( 'Linear Model/run.html#split_string',
                                                                                     'Political_Compass_AI/run.py'),
                                          'Political_Compass_AI.run.yield_tokens': ( 'Linear Model/run.html#yield_tokens',
                                                                                     'Political_Compass_AI/run.py')},
            'Political_Compass_AI.training': { 'Political_Compass_AI.training.evaluate': ( 'Linear '
                                                                                           'Model/Model_Utils/training.html#evaluate',
                                                                                           'Political_Compass_AI/training.py'),
                                               'Political_Compass_AI.training.train': ( 'Linear Model/Model_Utils/training.html#train',
                                                                                        'Political_Compass_AI/training.py')},
            'Political_Compass_AI.utils_alignment_count': { 'Political_Compass_AI.utils_alignment_count.alignment_count': ( 'Database '
                                                                                                                            'Utilities/count_alignments.html#alignment_count',
                                                                                                                            'Political_Compass_AI/utils_alignment_count.py'),
                                                            'Political_Compass_AI.utils_alignment_count.split_string': ( 'Database '
                                                                                                                         'Utilities/count_alignments.html#split_string',
                                                                                                                         'Political_Compass_AI/utils_alignment_count.py')},
            'Political_Compass_AI.utils_make_balanced_db': { 'Political_Compass_AI.utils_make_balanced_db.make_balanced_db': ( 'Database '
                                                                                                                               'Utilities/make_balanced_db.html#make_balanced_db',
                                                                                                                               'Political_Compass_AI/utils_make_balanced_db.py')},
            'Political_Compass_AI.utils_merge_data_bases': { 'Political_Compass_AI.utils_merge_data_bases.merge_data_bases': ( 'Database '
                                                                                                                               'Utilities/merge_to_one.html#merge_data_bases',
                                                                                                                               'Political_Compass_AI/utils_merge_data_bases.py')},
            'Political_Compass_AI.utils_parse_for_dupes': { 'Political_Compass_AI.utils_parse_for_dupes.parse_for_dupes': ( 'Database '
                                                                                                                            'Utilities/db_stat_parser.html#parse_for_dupes',
                                                                                                                            'Political_Compass_AI/utils_parse_for_dupes.py')}}}
